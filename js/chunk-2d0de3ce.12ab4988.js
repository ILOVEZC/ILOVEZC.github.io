(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0de3ce"],{8594:function(s,t){function e(){var s=function(){var s=this,t=s.$createElement;s._self._c;return s._m(0)},t=[function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("div",{staticClass:"frontmatter-markdown"},[e("h1",[s._v("Vue 官方 API")]),s._v(" "),e("h3",[s._v("组合式拾遗")]),s._v(" "),e("ol",[e("li",[s._v("defineComponent:从组件中获得类型 type")])]),s._v(" "),e("pre",[e("code",{pre:!0,attrs:{class:"hljs language-js"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" Foo = defineComponent("),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("/* ... */")]),s._v(")\ntype FooInstance = InstanceType<"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("typeof")]),s._v(" Foo>\n")])]),s._v(" "),e("ol",{attrs:{start:"2"}},[e("li",[s._v("setup()在选项式函数中的特性")])]),s._v(" "),e("ul",[e("li",[s._v("setup 定义并抛出的属性，在选项式中用 this 访问，自带解包")]),s._v(" "),e("li",[s._v("选项式中 setup()是可以解构出很多信息")])]),s._v(" "),e("pre",[e("code",{pre:!0,attrs:{class:"hljs language-js"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("export")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("default")]),s._v(" {\n  "),e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("setup")]),s._v("("),e("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("props, { attrs, slots, emit, expose }")]),s._v(")")]),s._v(" {\n    ...\n  }\n}\n")])]),s._v(" "),e("ul",[e("li",[s._v("setup 中的 expose 可以选择性的暴露公共属性")])]),s._v(" "),e("pre",[e("code",{pre:!0,attrs:{class:"hljs language-js"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("export")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("default")]),s._v(" {\n  "),e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("setup")]),s._v("("),e("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("props, { expose }")]),s._v(")")]),s._v(" {\n    "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 让组件实例处于 “关闭状态”")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 即不向父组件暴露任何东西")]),s._v("\n    expose()\n\n    "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" publicCount = ref("),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(")\n    "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" privateCount = ref("),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(")\n    "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 有选择地暴露局部状态")]),s._v("\n    expose({ "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("count")]),s._v(": publicCount })\n  },\n}\n")])]),s._v(" "),e("ol",{attrs:{start:"3"}},[e("li",[s._v("shallowRef 和 Ref 的区别")])]),s._v(" "),e("pre",[e("code",{pre:!0,attrs:{class:"hljs language-js"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" state = shallowRef({ "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("count")]),s._v(": "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(" })\n"),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 不会触发更改")]),s._v("\nstate.value.count = "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 会触发更改")]),s._v("\nstate.value = { "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("count")]),s._v(": "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v(" }\n")])]),s._v(" "),e("blockquote",[e("p",[s._v("shallowRef 没有深层响应，只有对 value 做直接的修改时才会触发更改,而 Ref 是深层响应，但是可以通过 triggerRef 强制触发一个 shallowRef 的深层响应")])]),s._v(" "),e("ol",{attrs:{start:"4"}},[e("li",[s._v("toRaw()用于响应式对象的直接解包")]),s._v(" "),e("li",[s._v("effectScope 可以一键关闭全部监听器，计算属性来降低性能损耗")])]),s._v(" "),e("pre",[e("code",{pre:!0,attrs:{class:"hljs language-js"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" scope = effectScope()\n\nscope.run("),e("span",{pre:!0,attrs:{class:"hljs-function"}},[s._v("() =>")]),s._v(" {\n  "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" doubled = computed("),e("span",{pre:!0,attrs:{class:"hljs-function"}},[s._v("() =>")]),s._v(" counter.value * "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v(")\n\n  watch(doubled, "),e("span",{pre:!0,attrs:{class:"hljs-function"}},[s._v("() =>")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("console")]),s._v(".log(doubled.value))\n\n  watchEffect("),e("span",{pre:!0,attrs:{class:"hljs-function"}},[s._v("() =>")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("console")]),s._v(".log("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'Count: '")]),s._v(", doubled.value))\n})\n\n"),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 处理掉当前作用域内的所有 effect")]),s._v("\nscope.stop()\n")])]),s._v(" "),e("ol",{attrs:{start:"6"}},[e("li",[s._v("onMounted 上常发布监听器，而在组件销毁时关闭监听器，降低性能损耗")])]),s._v(" "),e("h3",[s._v("内置指令")]),s._v(" "),e("h5",[s._v("v-pre:跳过该元素及所有子元素的编译，常用于输出大括号")]),s._v(" "),e("h5",[s._v("v-once:仅渲染该元素和组件一次，尔后 data 怎么变都不会使得组件重新渲染")]),s._v(" "),e("h4",[s._v("特殊的 Attributes")]),s._v(" "),e("ol",[e("li",[s._v("key 是用于配合 diff 算法使用的，key 是元素的一个标记，除去元素本来特性外，如果 key 改变，视作整个 dom 需要重新生成并插入，配合起来可以实现 transition 的动态效果")]),s._v(" "),e("li",[s._v("is 实现动态组件")])]),s._v(" "),e("h5",[s._v("CSS")]),s._v(" "),e("ol",[e("li",[s._v("可以与组合式 API 一起使用")])]),s._v(" "),e("pre",[e("code",{pre:!0,attrs:{class:"hljs language-js"}},[s._v("<template>\n  "),e("span",{pre:!0,attrs:{class:"xml"}},[e("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),e("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("p")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v(":class")]),s._v("="),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"classes.red"')]),s._v(">")]),s._v("red"),e("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("</"),e("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("p")]),s._v(">")])]),s._v("\n</template>\n\n"),e("span",{pre:!0,attrs:{class:"xml"}},[e("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),e("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("style")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("module")]),s._v("="),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"classes"')]),s._v(">")]),e("span",{pre:!0,attrs:{class:"css"}},[s._v("\n"),e("span",{pre:!0,attrs:{class:"hljs-selector-class"}},[s._v(".red")]),s._v(" {\n  "),e("span",{pre:!0,attrs:{class:"hljs-attribute"}},[s._v("color")]),s._v(": red;\n}\n")]),e("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("</"),e("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("style")]),s._v(">")])]),s._v("\n")])]),s._v(" "),e("blockquote",[e("p",[s._v("一般注册 module，就会存储在 vue 里面，可以被其他组件复用样式")])]),s._v(" "),e("pre",[e("code",{pre:!0,attrs:{class:"hljs language-js"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("import")]),s._v(" { useCssModule } "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("from")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'vue'")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 在 setup() 作用域中...")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 默认情况下, 返回 <style module> 的 class")]),s._v("\nuseCssModule()\n\n"),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v('// 具名情况下, 返回 <style module="classes"> 的 class')]),s._v("\nuseCssModule("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'classes'")]),s._v(")\n")])]),s._v(" "),e("ol",{attrs:{start:"2"}},[e("li",[e("p",[s._v("v-bind 可以绑定变量")])]),s._v(" "),e("li",[e("p",[s._v("带 scope 的 style 标签和不带 scope 的 style 标签可以混合存在")])])]),s._v(" "),e("h3",[s._v("渲染函数的相关 API")]),s._v(" "),e("ol",[e("li",[e("p",[s._v("h()创建虚拟 Dom 节点，原生元素和组件都可渲染")])]),s._v(" "),e("li",[e("p",[s._v("mergeProps()合并多个 props 对象")])]),s._v(" "),e("li",[e("p",[s._v("cloneVNode()返回一个克隆的 vnode，可以新附带属性")])]),s._v(" "),e("li",[e("p",[s._v("isNode()判断一个值是否为 vnode 类型")])]),s._v(" "),e("li",[e("p",[s._v("withDirectives()用于给 vnode 增加自定义指令")])]),s._v(" "),e("li",[e("p",[s._v("withModifiers()用于向事件处理函数添加内置 v-on 修饰符")])])])])}];return{render:s,staticRenderFns:t}}const a=e();s.exports={attributes:{},vue:{component:{data:function(){return{templateRender:null}},render:function(s){return this.templateRender?this.templateRender():s("div","Rendering")},created:function(){this.templateRender=a.render,this.$options.staticRenderFns=a.staticRenderFns}}}}}}]);
//# sourceMappingURL=chunk-2d0de3ce.12ab4988.js.map